{"version":3,"sources":["component/Redux/reducer.js","component/Header/styled.js","component/Header/NavBar.jsx","component/Header/Header.jsx","component/User/Login/styled.js","component/ServerRequests/request.js","component/User/Login/Login.jsx","component/WatchHistory/styled.js","component/WatchHistory/WatchHistory.jsx","component/User/BagReporter/styled.js","component/User/BagReporter/BagReporter.jsx","component/User/accounts/styled.js","component/User/accounts/UserAccount.jsx","component/User/accounts/Admin/adminstyled.js","component/User/accounts/Admin/EditDeleteCoins.jsx","component/User/accounts/Admin/RequestWait.jsx","component/User/accounts/Admin/BagReportAdmin.jsx","component/User/accounts/AdminAccount.jsx","component/User/EditAdd/styled.js","component/User/EditAdd/EditAdd.jsx","component/Search/styled.js","component/Search/Search.jsx","component/Coins/CoinsMain/styled.js","component/Coins/CoinsMain/CoinsMain.jsx","component/Coins/CoinsList/styled.js","component/Coins/CoinsList/CoinsList.jsx","component/Coins/CoinsPage/styled.js","component/Coins/CoinsPage/CoinsPage.jsx","component/Stock/styled.js","component/Stock/Stock.jsx","App.jsx","index.js"],"names":["initialState","coins","user","history","stock","reduser","state","action","type","payload","buyStock","filter","item","id","deleteStock","addStock","addStockStatus","find","push","story","status","length","i","window","localStorage","removeItem","setItem","JSON","stringify","slice","newStory","Main","styled","div","Title","User","NavLink","attrs","activeClassName","NavElement","HamburgerIcon","Menu","HamburgerMenu","name","date","price","country","composition","information","denomination","quality","weight","imgFrontUrl","imgBackUrl","NavBar","this","props","to","exact","pathname","key","data","React","Component","connect","Header","hamburgerMenuStatus","onClick","setState","style","display","rol","login","Row","Input","input","LoginButton","button","Registration","span","Accep","p","OpenPage","getDataServer","value","fetch","then","json","res","catch","getCoinDataServer","findDataServer","nameInformation","priceFrom","priceTo","yearIssueFrom","yearIssueTo","nameInfoReq","compositionReq","countryReq","qualityReq","priceFromReq","priceToReq","yearIssueFromReq","yearIssueToReq","takeColumnNameDataServer","waitreqDataServer","addBagReportServer","method","headers","body","text","addDataServer","acceptDataServer","token","updateDataServer","deleteDataServer","loginDataServer","pass","reqisDataServer","Login","registration","addValue","evt","target","userLoad","message","error","success","warning","clear","htmlFor","onChange","dispatch","Img","img","InfoBlock","h2","Text","WatchHistory","shortinfo","newText","blockCoins","map","alt","src","reverse","textarea","Button","BagReporter","changeValue","sendReport","placeholder","UserName","UserAccount","pageName","logout","changePage","FindBlock","FindButton","SearchInput","CoinsBlock","EditDeleteCoins","loading","deleteCoins","menuLoaded","findCoins","coinsBlock","color","height","width","newCoins","RequestWait","acceptCoins","BagReportAdmin","info","AdminAccount","adminPanel","MainElement","Label","label","Select","select","TextArea","EditAdd","location","saveStatus","undefined","manipulateCoin","alert","cols","rows","FilterButton","FilterBlock","TypeInput","Search","countryColumn","compositionColumn","qualityColumn","FilterBlockStatus","advanceFilterChange","creatSelectOption","loadingStatus","Block","CoinsMain","CoinsList","setTimeout","MainSimilar","ImgSimilar","TitleSimilar","h1","TitleSimilarHeader","Information","Table","table","Back","CoinsPage","similar","creatParagraph","allText","openNewPage","historyAdd","backToTop","addToStock","stockAdd","match","params","pageYOffset","scrollBy","similarCoins","newStock","TotalPrice","Price","Stock","number","Math","floor","random","notification","open","description","console","log","buyCoins","App","getItem","watchStory","parse","path","component","render","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c241b823.chunk.js","sourcesContent":["const initialState = {\r\n    coins: [],\r\n    user: false,\r\n    history: [],\r\n    stock: []\r\n}\r\nconst reduser = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'MENU_LOADED':\r\n            return { ...state, coins: action.payload };\r\n        case 'USER_LOGIN':\r\n            return { ...state, user: action.payload };\r\n        case 'USER_LOGOUT':\r\n            return { ...state, user: false };\r\n        case 'BUY_STOCK':\r\n            let buyStock = [...state.stock];\r\n            return { ...state, stock: buyStock.filter(item => item.id !== action.payload) };\r\n        case 'DELETE_STOCK':\r\n            let deleteStock = [...state.stock];\r\n            return { ...state, stock: deleteStock.filter(item => item.id !== action.payload) };\r\n        case 'ADD_STOCK':\r\n            let addStock = [...state.stock];\r\n            const addStockStatus = addStock.find(item => item.id === action.payload.id);\r\n            if (!addStockStatus) {\r\n                addStock.push(action.payload);\r\n                return { ...state, stock: addStock };\r\n            }\r\n            return state;\r\n        case 'HISTORY_LOADED':\r\n            let story = [...state.history];\r\n            const status = story.find(item => item.id === action.payload.id);\r\n            if (!status) {\r\n                if (action.payload.length >= 0) {\r\n                    for (let i = 0; i < action.payload.length; i++) {\r\n                        story.push(action.payload[i])\r\n                    }\r\n                } else {\r\n                    story.push(action.payload)\r\n                }\r\n                window.localStorage.removeItem('watchStory')\r\n                window.localStorage.setItem('watchStory', JSON.stringify(story.slice(-20)));\r\n                const newStory = { ...state, history: story.slice(-20) }\r\n                return newStory\r\n            }\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default reduser;","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Menu } from '@styled-icons/entypo/Menu';\r\n\r\nconst Main = styled.div`\r\n    heigth:250px;\r\n    padding:10px;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n        justify-content:center;\r\n        align-items:center;\r\n    }\r\n`\r\nconst Title = styled.div`\r\n    min-width: 200px;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    font:normal 300 50px/59px Dancing Script, cursive;;\r\n    color: #000000;\r\n`\r\nconst activeClassName = 'active';\r\n\r\nconst User = styled(NavLink).attrs({\r\n    activeClassName: activeClassName,\r\n})`\r\n    display: flex;\r\n    align-items: center;   \r\n    font:normal 300 20px/109% Roboto;\r\n    background:#fff;\r\n    padding:10px;\r\n    outline:none;\r\n    border:1px solid block;\r\n    border-shadow:none;\r\n    border-radius:25px;\r\n    text-align: right;\r\n    text-decoration: none;\r\n    color:#000;\r\n    &:hover{\r\n        text-decoration:underline;\r\n        color: #833AE0;\r\n    }\r\n    &.${activeClassName} {\r\n        color: #833AE0;\r\n    }\r\n`\r\n\r\nconst NavElement = styled(NavLink).attrs({\r\n    activeClassName: activeClassName,\r\n})`\r\n    height: 24px;\r\n    display: flex;\r\n    margin:2px 20px;\r\n    align-items: center;\r\n    font:normal normal 20px/24px Roboto;\r\n    text-align: center;\r\n    color: #000000;\r\n    text-decoration:none;\r\n    &:hover{\r\n    text-align: center;\r\n    text-decoration:underline;\r\n    color: #833AE0;\r\n    }\r\n    @media (max-width: 768px) {\r\n        width: auto;\r\n    }\r\n    &.${activeClassName} {\r\n        color: #833AE0;\r\n    }\r\n`\r\nconst HamburgerIcon = styled(Menu)`\r\n    width:30px;\r\n    display:none;\r\n    @media (max-width: 768px) {\r\n        display:block;\r\n    }\r\n`\r\nconst HamburgerMenu = styled.div`\r\n    width:60%;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    @media (max-width: 768px) {\r\n        flex-direction:column;\r\n        justify-content:center;\r\n        align-items:center;\r\n    } @media (min-width: 768px) {\r\n        display:flex !important;\r\n    }\r\n`\r\nexport { Main, HamburgerMenu, HamburgerIcon, Title, User, NavElement };","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Main, NavElement } from './styled';\r\n\r\nconst item = {\r\n    id: '',\r\n    name: '',\r\n    date: '',\r\n    price: '',\r\n    country: '',\r\n    composition: '',\r\n    information: '',\r\n    denomination: '',\r\n    quality: '',\r\n    weight: '',\r\n    type: 'Memorable',\r\n    imgFrontUrl: '',\r\n    imgBackUrl: ''\r\n}\r\nexport class NavBar extends React.Component {\r\n    render() {\r\n        const { user } = this.props;\r\n        return (\r\n            <Main>\r\n                <NavElement to={'/'} exact>Coins</NavElement>\r\n                <NavElement to={`${user ? '/stock' : '/login'}`}>Stock</NavElement>\r\n                <NavElement to={{ pathname: `${user ? '/coins/add' : '/login'}`, key: 2, state: { data: item, action: 'add' } }} > Add Coin</NavElement>\r\n            </Main >\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Main, HamburgerMenu, HamburgerIcon, Title, User } from './styled';\r\nimport NavBar from './NavBar';\r\n\r\nexport class Header extends React.Component {\r\n    state = {\r\n        hamburgerMenuStatus: false,\r\n    }\r\n    render() {\r\n        const { user } = this.props;\r\n        const { hamburgerMenuStatus } = this.state;\r\n        return (\r\n            <div>\r\n                <Main>\r\n                    <Title>Coins Store</Title>\r\n                    <HamburgerIcon onClick={() => { this.setState({ hamburgerMenuStatus: !hamburgerMenuStatus }) }} />\r\n                    <HamburgerMenu style={{ display: hamburgerMenuStatus ? 'flex' : 'none' }}>\r\n                        <NavBar />\r\n                        {user ? <User to={user.rol === 'admin' ? '/account/admin' : '/account/user'}>{user.login}</User> : <User to='/login'>Login</User>}\r\n                    </HamburgerMenu>\r\n                </Main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Main = styled.div`\r\n    font-family:Roboto;\r\n    background:white;\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    width:100%;\r\n    margin:5px 0;\r\n    height:100vh;\r\n`\r\nconst Row = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n`\r\nconst Input = styled.input`\r\n    width: 374px;\r\n    height: 48px;\r\n    font-size:25px;\r\n    margin:10px;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n`\r\nconst LoginButton = styled.button`\r\n    width: 120px;\r\n    height: 48px;\r\n    background: #833AE0;\r\n    color: #000000;\r\n    background: #E1E1E1;\r\n    border:none;\r\n    cursor:pointer;\r\n    &:hover{\r\n        background: #833AE0; \r\n        color: #FFFFFF;\r\n    }\r\n`\r\nconst Registration = styled.span`\r\n    color: #833AE0;\r\n    cursor:pointer;\r\n`\r\nconst Accep = styled.p`\r\n    font-family:normal 500 30px/109% Roboto;\r\n    color: #000000;\r\n`\r\nconst OpenPage = styled(NavLink)`\r\n    font-family:normal 500 30px/109% Roboto;\r\n    color: #000000;\r\n`\r\nexport { Main, Accep, OpenPage, Row, Input, LoginButton, Registration };","function getDataServer(value) {\r\n    const type = value ? `?type=${value}` : '';\r\n    return fetch(`/coins${type}`)\r\n        .then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(() => 'Произошла ошибка во время загрузки данных!')\r\n}\r\nfunction getCoinDataServer(value) {\r\n    const type = value ? `${value}` : '';\r\n    return fetch(`/coins/page/take/${type}`)\r\n        .then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(() => 'Произошла ошибка во время загрузки данных!')\r\n}\r\nfunction findDataServer(value) {\r\n    const { nameInformation, composition, country, quality, priceFrom, priceTo, yearIssueFrom, yearIssueTo } = value\r\n    const nameInfoReq = nameInformation ? `name=${nameInformation}&information=${nameInformation}&` : '';\r\n    const compositionReq = composition ? `composition=${composition}&` : '';\r\n    const countryReq = country ? `country=${country}&` : '';\r\n    const qualityReq = quality ? `quality=${quality}&` : '';\r\n    const priceFromReq = priceFrom ? `priceFrom=${priceFrom}&` : '';\r\n    const priceToReq = priceTo ? `priceTo=${priceTo}&` : '';\r\n    const yearIssueFromReq = yearIssueFrom ? `yearIssueFrom=${yearIssueFrom}&` : '';\r\n    const yearIssueToReq = yearIssueTo ? `yearIssueTo=${yearIssueTo}&` : '';\r\n    return fetch(`/coins/search?${nameInfoReq}${compositionReq}${countryReq}${qualityReq}${priceFromReq}${priceToReq}${yearIssueFromReq}${yearIssueToReq}`)\r\n        .then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(() => 'Произошла ошибка во время загрузки данных!')\r\n}\r\nfunction takeColumnNameDataServer(value) {\r\n    const column = value;\r\n    return fetch(`/coins/column?value=${column}`)\r\n        .then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(() => 'Произошла ошибка во время загрузки данных!')\r\n}\r\nfunction waitreqDataServer(value) {\r\n    const status = value ? `?status=${value}` : '';\r\n    return fetch(`/coins${status}`)\r\n        .then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(() => 'Произошла ошибка во время загрузки данных!')\r\n}\r\nfunction getBagReportServer() {\r\n    return fetch(`/coins/user/bgrep`)\r\n        .then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(() => 'Произошла ошибка во время загрузки данных!')\r\n}\r\nfunction addBagReportServer(value) {\r\n    return fetch(`/coins/user/bgrep`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            name: value.name,\r\n            text: value.text\r\n        })\r\n    })\r\n        .then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(() => 'Произошла ошибка во время загрузки данных!')\r\n}\r\nfunction addDataServer(value, user) {\r\n    const status = (user.rol === 'admin') ? 'true' : 'false';\r\n    return fetch(`/coins`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            name: value.name,\r\n            imgFrontUrl: value.imgFrontUrl,\r\n            imgBackUrl: value.imgBackUrl,\r\n            country: value.country,\r\n            composition: value.composition,\r\n            quality: value.quality,\r\n            denomination: value.denomination,\r\n            date: +value.date,\r\n            weight: value.weight,\r\n            price: +value.price,\r\n            information: value.information,\r\n            type: value.type,\r\n            status: status\r\n        })\r\n    })\r\n        .then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(() => 'Произошла ошибка во время загрузки данных!')\r\n}\r\nfunction acceptDataServer(value, user) {\r\n    return fetch(`/coins/accept`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id: value,\r\n            login: user.login,\r\n            token: user.token,\r\n            rol: user.rol\r\n\r\n        })\r\n    })\r\n        .then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(() => 'Произошла ошибка во время загрузки данных!')\r\n}\r\nfunction updateDataServer(value, user) {\r\n    return fetch(`/coins/update`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            id: value.id,\r\n            name: value.name,\r\n            imgFrontUrl: value.imgFrontUrl,\r\n            imgBackUrl: value.imgBackUrl,\r\n            country: value.country,\r\n            composition: value.composition,\r\n            quality: value.quality,\r\n            denomination: value.denomination,\r\n            date: +value.date,\r\n            weight: value.weight,\r\n            price: +value.price,\r\n            information: value.information,\r\n            type: value.type,\r\n            login: user.login,\r\n            token: user.token,\r\n            rol: user.rol\r\n\r\n        })\r\n    })\r\n        .then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(() => 'Произошла ошибка во время загрузки данных!')\r\n}\r\nfunction deleteDataServer(value, user) {\r\n    const id = value;\r\n    const login = user.login;\r\n    const token = user.token;\r\n    const rol = user.rol;\r\n    return fetch(`/coins/delete/${id}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            login: login,\r\n            token: token,\r\n            rol: rol\r\n\r\n        })\r\n    })\r\n        .then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n        .catch(() => 'Произошла ошибка во время загрузки данных!')\r\n}\r\n\r\nfunction loginDataServer(login, pass) {\r\n    return fetch('/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            login: login,\r\n            pass: pass\r\n        })\r\n    }).then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\nfunction reqisDataServer(login, pass) {\r\n    return fetch('/register', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            login: login,\r\n            pass: pass\r\n        })\r\n    }).then(data => data.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\n\r\nexport { getDataServer, findDataServer, takeColumnNameDataServer, loginDataServer, addDataServer, updateDataServer, deleteDataServer, reqisDataServer, waitreqDataServer, acceptDataServer, getCoinDataServer, addBagReportServer, getBagReportServer };\r\n","import React from 'react';\r\nimport { message } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { connect } from 'react-redux';\r\nimport { Main, Accep, OpenPage, Row, Input, LoginButton, Registration } from './styled';\r\nimport { loginDataServer, reqisDataServer } from '../../ServerRequests/request';\r\n\r\nexport class Login extends React.Component {\r\n    state = {\r\n        login: '',\r\n        pass: '',\r\n        registration: true\r\n    }\r\n    componentDidMount() {\r\n        window.localStorage.clear();\r\n    }\r\n    addValue = (evt) => {\r\n        this.setState({\r\n            [evt.target.name]: evt.target.value\r\n        })\r\n    }\r\n    login = () => {\r\n        const { login, pass, registration } = this.state;\r\n        if (registration) {\r\n            loginDataServer(login, pass)\r\n                .then(res => {\r\n                    if (res) {\r\n                        const { userLoad } = this.props;\r\n                        window.localStorage.setItem('access_token', res.token);\r\n                        window.localStorage.setItem('rol', res.rol);\r\n                        window.localStorage.setItem('login', res.login);\r\n                        userLoad(res)\r\n                    } else {\r\n                        message.error('Wrong Login or Pass');\r\n                    }\r\n                })\r\n        } else {\r\n            reqisDataServer(login, pass)\r\n                .then(res => {\r\n                    if (res) {\r\n                        message.success('Registration was successful');\r\n                        this.setState({ registration: false })\r\n\r\n                    } else {\r\n                        message.warning('Change Login');\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    render() {\r\n        const { login, pass, registration } = this.state;\r\n        const { user } = this.props;\r\n        return (\r\n            <Main>\r\n                {user ?\r\n                    <div>\r\n                        <Accep>Access-Accep</Accep>\r\n                        <OpenPage to='/'>Open Coins</OpenPage >\r\n                    </div>\r\n                    :\r\n                    <Main>\r\n                        {registration ? <div>\r\n                            <Row>\r\n                                <label htmlFor=\"login\">Login</label>\r\n                                <Input name='login' value={login} onChange={this.addValue} type='text' id='login' />\r\n                            </Row>\r\n                            <Row>\r\n                                <label htmlFor=\"pass\">Password</label>\r\n                                <Input name='pass' value={pass} onChange={this.addValue} type='password' id='pass' />\r\n                            </Row>\r\n                            <Row>\r\n                                <LoginButton onClick={this.login}>Sign in</LoginButton>\r\n                            </Row>\r\n                            <Row>\r\n                                <p>Don't have an account  ?/<Registration onClick={() => { this.setState({ registration: false }) }}>  Registration</Registration></p>\r\n                            </Row>\r\n                        </div> :\r\n                            <div>\r\n                                <Row>\r\n                                    <label htmlFor=\"login\">Login</label>\r\n                                    <Input name='login' value={login} onChange={this.addValue} type='text' id='login' />\r\n                                </Row>\r\n                                <Row>\r\n                                    <label htmlFor=\"pass\">Password</label>\r\n                                    <Input name='pass' value={pass} onChange={this.addValue} type='password' id='pass' />\r\n                                </Row>\r\n                                <Row>\r\n                                    <LoginButton onClick={this.login}>Registration</LoginButton>\r\n                                    <p><Registration onClick={() => { this.setState({ registration: true }) }}>  Back</Registration></p>\r\n                                </Row>\r\n                            </div>\r\n                        }\r\n                    </Main>\r\n                }\r\n\r\n            </Main>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userLoad: (User) => {\r\n            dispatch({\r\n                type: 'USER_LOGIN',\r\n                payload: User\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Main = styled.div`\r\n    display:flex;\r\n    justify-content:flex-start;\r\n    flex-wrap:wrap;\r\n    padding:25px 0;\r\n    @media (max-width: 900px) {\r\n        justify-content:center;\r\n    }\r\n`\r\nconst NavElement = styled(NavLink)`\r\n    min-width:300px;\r\n    width:50%;\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    justify-content:space-around;\r\n    text-decoration:none;\r\n    \r\n`\r\nconst Img = styled.img`\r\n    width: 120px;\r\n    height: 120px;\r\n    margin-right:50px;\r\n`\r\nconst InfoBlock = styled.div`\r\n`\r\nconst Title = styled.h2`\r\n    font:normal bold 28px/19px Roboto;\r\n    color: #833AE0;\r\n    text-align:center;\r\n    margin:10px auto;\r\n`\r\nconst Text = styled.p`\r\n    width: 300px;\r\n    height: 95px;\r\n    font:normal normal 12px/125.5% Roboto;\r\n    color: #000000;\r\n`\r\nexport { Main, NavElement, Img, InfoBlock, Text, Title }","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Main, NavElement, Img, Title, Text, InfoBlock } from './styled';\r\n\r\nexport class WatchHistory extends React.Component {\r\n    shortinfo = (value) => {\r\n        const text = value;\r\n        let newText = '';\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (i > 150) {\r\n                break\r\n            }\r\n            newText += text[i];\r\n        }\r\n        return newText;\r\n    }\r\n    render() {\r\n        const { history } = this.props;\r\n        const blockCoins = history.map(item => {\r\n            const text = this.shortinfo(item.information)\r\n            return (\r\n                <NavElement to={{ pathname: `/coins/page/${item.id}` }} key={item.id}>\r\n                    <Img alt=\"coins\" src={item.imgFrontUrl} />\r\n                    <InfoBlock>\r\n                        <Title>{item.name}</Title>\r\n                        <Text>{text}</Text>\r\n                    </InfoBlock>\r\n                </NavElement>\r\n            )\r\n        }).reverse()\r\n        return (\r\n            <Main>\r\n                {blockCoins}\r\n            </Main>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        history: state.history\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WatchHistory);","import styled from 'styled-components';\r\n\r\nconst Main = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content: center;\r\n    align-items:center;\r\n    font:normal 500 16px/109% Roboto;\r\n    color:#000;\r\n`\r\nconst Input = styled.input`\r\n    width:20%;\r\n    margin:20px auto;\r\n    font-size:20px;\r\n`\r\nconst Text = styled.textarea`\r\n    width:50%;\r\n    height:250px;\r\n    resize: none;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n`\r\nconst Button = styled.button`\r\n    width: 120px;\r\n    height: 48px;\r\n    background: #E5E5E5;\r\n    border:none;\r\n    margin:5px 25px;\r\n    cursor:pointer;\r\n    &:hover{\r\n        background: #833AE0; \r\n        color: #FFFFFF;\r\n    }\r\n`\r\nexport { Main, Input, Text, Button }","import React from 'react';\r\nimport { addBagReportServer } from '../../ServerRequests/request';\r\nimport { message } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { Main, Input, Text, Button } from './styled';\r\n\r\nclass BagReporter extends React.Component {\r\n    state = {\r\n        value: {\r\n            name: '',\r\n            text: ''\r\n        }\r\n    }\r\n    changeValue = (evt) => {\r\n        this.setState({\r\n            value: { ...this.state.value, [evt.target.name]: evt.target.value }\r\n        })\r\n    }\r\n    sendReport = () => {\r\n        const { value } = this.state;\r\n        if (value.text) {\r\n            addBagReportServer(value)\r\n                .then(res => {\r\n                    message.success('Message send');\r\n                    this.setState({\r\n                        value: {\r\n                            name: '',\r\n                            text: ''\r\n                        }\r\n                    })\r\n                })\r\n                .catch(() => {\r\n                    message.error('Something go wrong');\r\n                });\r\n        } else {\r\n            message.error('Text is empty');\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Main>\r\n                <Input name='name' onChange={this.changeValue} placeholder='Name' />\r\n                <Text name='text' onChange={this.changeValue} placeholder='Bag Report' />\r\n                <Button onClick={this.sendReport}>Send</Button>\r\n            </Main>\r\n        )\r\n    }\r\n}\r\nexport default BagReporter;","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst UserName = styled.div`\r\n    font:normal 300 50px/59px Roboto;\r\n    text-align:center;\r\n    padding:50px;\r\n    color: #000000;\r\n`\r\nconst Row = styled.div`\r\n    display:flex;\r\n`\r\nconst Button = styled.button`\r\n    width: 120px;\r\n    height: 48px;\r\n    background: #E5E5E5;\r\n    border:none;\r\n    margin:5px 25px;\r\n    cursor:pointer;\r\n    &:hover{\r\n        background: #833AE0; \r\n        color: #FFFFFF;\r\n    }\r\n`\r\nconst NavElement = styled(NavLink)`\r\n    color: #000000\r\n`\r\nexport { UserName, Button, Row, NavElement }","import React from 'react';\r\nimport WatchHistory from '../../WatchHistory/WatchHistory';\r\nimport BagReporter from '../BagReporter/BagReporter';\r\nimport { connect } from 'react-redux';\r\nimport { Row, UserName, Button, NavElement } from './styled';\r\n\r\n\r\nexport class UserAccount extends React.Component {\r\n    state = {\r\n        pageName: 'bagReport'\r\n    }\r\n    logout = () => {\r\n        window.localStorage.clear();\r\n        const { logout } = this.props;\r\n        logout();\r\n    }\r\n    changePage = (evt) => {\r\n        this.setState({\r\n            pageName: evt.target.name\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { pageName } = this.state;\r\n        const { user } = this.props;\r\n        return (\r\n            <div>\r\n                <UserName>{user.login}</UserName>\r\n                <Row>\r\n                    <Button name='story' onClick={this.changePage}>Story</Button>\r\n                    <Button name='bagReport' onClick={this.changePage}>Bag Report</Button>\r\n                    <NavElement to='/'><Button onClick={this.logout} > Logout</Button></NavElement>\r\n                </Row>\r\n                {pageName === 'story' && <WatchHistory />}\r\n                {pageName === 'bagReport' && <BagReporter />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => {\r\n            dispatch({\r\n                type: 'USER_LOGOUT'\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAccount);\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Main = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:flex-start;\r\n    flex-wrap:wrap;\r\n    padding:25px 0;\r\n    @media (max-width: 900px) {\r\n        justify-content:center;\r\n      }\r\n`\r\nconst FindBlock = styled.div`\r\n    display:flex;\r\n`\r\nconst FindButton = styled.button`\r\n    width: 120px;\r\n    height: 48px;\r\n    background: #833AE0;\r\n    font:normal normal 14px/16px Roboto;\r\n    text-align: center;\r\n    color: #FFFFFF;\r\n    border:none;\r\n    margin-left:30px;\r\n`\r\nconst Row = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nconst SearchInput = styled.input`\r\n    min-width:250px;\r\n    width: 374px;\r\n    height: 48px;\r\n    font-size:30px;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n`\r\n\r\nconst UserName = styled.div`\r\n    font:normal 300 50px/59px Roboto;\r\n    text-align:center;\r\n    padding:50px;\r\n    color: #000000;\r\n`\r\nconst CoinsBlock = styled.div`\r\n    min-width:300px;\r\n    width:60%;\r\n    margin:5px;\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    text-decoration:none;\r\n`\r\n\r\nconst Img = styled.img`\r\n    width: 120px;\r\n    height: 120px;\r\n    @media (max-width: 768px) {\r\n        margin:0 auto;\r\n      }\r\n`\r\nconst InfoBlock = styled.div`\r\n`\r\n\r\nconst Title = styled.h2`\r\n    width: 300px;\r\n    height: 20px;\r\n    font:normal bold 16px/19px Roboto;\r\n    color: #833AE0;\r\n    @media (max-width: 768px) {\r\n        text-align:center;\r\n      }\r\n`\r\nconst Text = styled.p`\r\n    width: 300px;\r\n    font:normal normal 12px/125.5% Roboto;\r\n    color: #000000;\r\n`\r\nconst NavElement = styled(NavLink)`\r\n    width: 120px;\r\n    height: 48px;\r\n    font:normal normal 14px/16px Roboto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content:center;\r\n    text-decoration:none;\r\n    text-align: center;\r\n    color: #000000;\r\n    background: #E5E5E5;\r\n    cursor:pointer;\r\n    &:hover{\r\n        background: #833AE0; \r\n        color: #FFFFFF;\r\n    }\r\n`\r\nconst Button = styled.button`\r\n    width: 120px;\r\n    height: 48px;\r\n    font:normal normal 14px/16px Roboto;\r\n    background: #E5E5E5;\r\n    color: #000000;\r\n    border:none;\r\n    cursor:pointer;\r\n    &:hover{\r\n        background: #833AE0; \r\n        color: #FFFFFF;\r\n    }\r\n`\r\nexport { Main, FindBlock, Row, SearchInput, FindButton, UserName, CoinsBlock, Img, InfoBlock, Text, Title, NavElement, Button }","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport { connect } from 'react-redux';\r\nimport { getDataServer, findDataServer, deleteDataServer } from '../../../ServerRequests/request';\r\nimport { Main, FindBlock, SearchInput, FindButton, CoinsBlock, Img, InfoBlock, Text, Title, Button, NavElement } from './adminstyled';\r\n\r\nexport class EditDeleteCoins extends React.Component {\r\n    state = {\r\n        value: {\r\n            nameInformation: '',\r\n        },\r\n        loading: true\r\n    }\r\n    componentDidMount() {\r\n        getDataServer()\r\n            .then(res => {\r\n                const { menuLoaded } = this.props;\r\n                menuLoaded(res)\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            })\r\n    }\r\n    shortinfo = (value) => {\r\n        const text = value;\r\n        let newText = '';\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (i > 150) {\r\n                break\r\n            }\r\n            newText += text[i];\r\n        }\r\n        return newText;\r\n    }\r\n    deleteCoins = (value) => {\r\n        const { user } = this.props;\r\n        deleteDataServer(value, user)\r\n            .then(res => {\r\n                const { menuLoaded } = this.props;\r\n                menuLoaded(res)\r\n            })\r\n    }\r\n    findCoins = () => {\r\n        const { value } = this.state;\r\n        if (value) {\r\n            findDataServer(value)\r\n                .then(res => {\r\n                    const { menuLoaded } = this.props;\r\n                    menuLoaded(res)\r\n                })\r\n        }\r\n    }\r\n    render() {\r\n        const { coins } = this.props;\r\n        const { nameInformation, loading } = this.state;\r\n        const coinsBlock = coins.length >= 0 ? coins.map(item => {\r\n            const text = this.shortinfo(item.information)\r\n            return (\r\n                <CoinsBlock key={item.id}>\r\n                    <Img alt=\"coins\" src={item.imgFrontUrl} />\r\n                    <InfoBlock>\r\n                        <Title>{item.name}</Title>\r\n                        <Text>{text}...</Text>\r\n                    </InfoBlock>\r\n                    <NavElement to={{ pathname: \"/coins/update\", state: { data: item, action: 'edit' } }} >Edit</NavElement>\r\n                    <Button onClick={() => this.deleteCoins(item.id)}>Delete</Button>\r\n                </CoinsBlock>\r\n            )\r\n        }) : null;\r\n        return (\r\n            <div>\r\n                {loading ? <ReactLoading type='spin' color='#843AE0' height={'5%'} width={'5%'} /> : null}\r\n                <FindBlock>\r\n                    <SearchInput key={1} name='nameInformation' value={nameInformation} onChange={(evt) => { this.setState({ value: { [evt.target.name]: evt.target.value } }) }} placeholder=\"Search\" />\r\n                    <FindButton onClick={this.findCoins} >Search</FindButton>\r\n                </FindBlock>\r\n                <Main>\r\n                    {coinsBlock}\r\n                </Main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        coins: state.coins\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        menuLoaded: (newCoins) => {\r\n            dispatch({\r\n                type: 'MENU_LOADED',\r\n                payload: newCoins\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditDeleteCoins);","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport { connect } from 'react-redux';\r\nimport { waitreqDataServer, deleteDataServer, acceptDataServer } from '../../../ServerRequests/request';\r\nimport { CoinsBlock, Img, InfoBlock, Text, Title, Button, NavElement } from './adminstyled';\r\nclass RequestWait extends React.Component {\r\n    state = {\r\n        loading: true\r\n    }\r\n    componentDidMount() {\r\n        waitreqDataServer('false')\r\n            .then(res => {\r\n                const { menuLoaded } = this.props;\r\n                menuLoaded(res)\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n            })\r\n    }\r\n    shortinfo = (value) => {\r\n        const text = value;\r\n        let newText = '';\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (i > 150) {\r\n                break\r\n            }\r\n            newText += text[i];\r\n        }\r\n        return newText;\r\n    }\r\n    deleteCoins = (value) => {\r\n        const { user } = this.props;\r\n        deleteDataServer(value, user)\r\n            .then(res => {\r\n                waitreqDataServer('false')\r\n                    .then(res => {\r\n                        const { menuLoaded } = this.props;\r\n                        menuLoaded(res)\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n    acceptCoins = (value) => {\r\n        const { user } = this.props;\r\n        acceptDataServer(value, user)\r\n            .then(res => {\r\n                waitreqDataServer('false')\r\n                    .then(res => {\r\n                        const { menuLoaded } = this.props;\r\n                        menuLoaded(res)\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n    render() {\r\n        const { coins } = this.props;\r\n        const { loading } = this.state;\r\n        const coinsBlock = coins ? coins.map(item => {\r\n            const text = this.shortinfo(item.information)\r\n            return (\r\n                <CoinsBlock key={item.id}>\r\n                    <Img alt=\"coins\" src={item.imgFrontUrl} />\r\n                    <InfoBlock>\r\n                        <Title>{item.name}</Title>\r\n                        <Text>{text}...</Text>\r\n                    </InfoBlock>\r\n                    <NavElement to={{ pathname: \"/coins/update\", state: { data: item, action: 'edit' } }} >Edit</NavElement>\r\n                    <Button onClick={() => this.acceptCoins(item.id)}>Accept</Button>\r\n                    <Button onClick={() => this.deleteCoins(item.id)}>Delete</Button>\r\n                </CoinsBlock>\r\n            )\r\n        }) : null;\r\n        return (\r\n            <div>{loading ? <ReactLoading type='spin' color='#843AE0' height={'5%'} width={'5%'} /> : null}\r\n                <div>{coinsBlock}</div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        coins: state.coins\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        menuLoaded: (newCoins) => {\r\n            dispatch({\r\n                type: 'MENU_LOADED',\r\n                payload: newCoins\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RequestWait);","import React from 'react';\r\nimport { getBagReportServer } from '../../../ServerRequests/request';\r\nimport { Main, InfoBlock, Title, Text } from './adminstyled';\r\n\r\nclass BagReportAdmin extends React.Component {\r\n    state = {\r\n        data: []\r\n    }\r\n    componentDidMount() {\r\n        getBagReportServer()\r\n            .then(res => {\r\n                this.setState({\r\n                    data: res\r\n                })\r\n            })\r\n    }\r\n    render() {\r\n        const { data } = this.state;\r\n        const info = data.map(item => {\r\n            return (\r\n                <InfoBlock key={item.id}>\r\n                    <Title>{item.name}</Title>\r\n                    <Text>{item.text}</Text>\r\n                </InfoBlock>\r\n            )\r\n        }).reverse()\r\n        return (\r\n            <Main>{info}</Main>\r\n        )\r\n    }\r\n}\r\nexport default BagReportAdmin;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EditDeleteCoins from './Admin/EditDeleteCoins';\r\nimport RequestWait from './Admin/RequestWait';\r\nimport BagReportAdmin from './Admin/BagReportAdmin';\r\nimport { UserName, Button, NavElement } from './styled';\r\n\r\nexport class AdminAccount extends React.Component {\r\n    state = {\r\n        adminPanel: 'edit'\r\n    }\r\n    logout = () => {\r\n        window.localStorage.clear();\r\n        const { logout } = this.props;\r\n        logout();\r\n    }\r\n    render() {\r\n        const { adminPanel } = this.state;\r\n        const { user } = this.props;\r\n        return (\r\n            <div>\r\n                <UserName>{user.login}</UserName>\r\n                {user.rol === 'admin' ?\r\n                    [<div key={'find'}>\r\n                        <Button onClick={() => this.setState({ adminPanel: 'edit' })} >Update Coins</Button>\r\n                        <Button onClick={() => this.setState({ adminPanel: 'request' })} > Сoin Request</Button>\r\n                        <Button onClick={() => this.setState({ adminPanel: 'report' })} > Bag Report</Button>\r\n                        <NavElement to='/'><Button onClick={this.logout} > Logout</Button></NavElement>\r\n                    </div>,\r\n                    <div key={'element'}>\r\n                        {adminPanel === 'edit' && <EditDeleteCoins key={'edit'} />}\r\n                        {adminPanel === 'request' && <RequestWait key={'access'} />}\r\n                        {adminPanel === 'report' && <BagReportAdmin />}\r\n                    </div>]\r\n                    : <p >You dont have accses</p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user,\r\n        coins: state.coins\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        logout: () => {\r\n            dispatch({\r\n                type: 'USER_LOGOUT'\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminAccount);","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Main = styled.div`\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    justify-content:center;\r\n    & div:last-child{\r\n        justify-content: space-between;\r\n        & div:last-child{\r\n            display:flex;\r\n            flex-direction:row ;\r\n            justify-content: space-around;\r\n        }\r\n    }\r\n    \r\n`\r\nconst InfoBlock = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:center;\r\n    align-items:center;\r\n    width:30%;\r\n    height:250px;\r\n    background:grey;\r\n    border-radius:50px;\r\n    position:absolute;\r\n    top:50%;\r\n    left:50%;\r\n    transform: translate(-50%, -50%);\r\n`\r\nconst Row = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    margin:10px;\r\n`\r\nconst MainElement = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nconst Label = styled.label`\r\n    font:normal 500 14px/109% Roboto;\r\n    margin:5px 0;\r\n    color: #000000;\r\n`\r\nconst Input = styled.input`\r\n    width: 374px;\r\n    height: 48px;\r\n    font-size:36px;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n`\r\nconst Select = styled.select`\r\n    width: 374px;\r\n    height: 48px;\r\n    font-size:36px;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n`\r\nconst TextArea = styled.textarea`\r\n    resize: none;\r\n    font-size:16px;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n`\r\nconst Button = styled.button`\r\n    width: 120px;\r\n    height: 48px;\r\n    font:normal normal 14px/16px Roboto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #000000;\r\n    background: #E1E1E1;\r\n    border:none;\r\n    cursor:pointer;\r\n    &:hover{\r\n        background: #833AE0; \r\n        color: #FFFFFF;\r\n    }\r\n`\r\nconst NavElement = styled(NavLink)`\r\n    width: 120px;\r\n    height: 48px;\r\n    font:normal normal 14px/16px Roboto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #000000;\r\n    background: #E1E1E1;\r\n    text-decoration:none;\r\n    border:none;\r\n    &:hover{\r\n        background: #833AE0; \r\n        color: #FFFFFF;\r\n    }\r\n`\r\nexport { Main, InfoBlock, NavElement, MainElement, Row, Label, Input, Select, TextArea, Button }","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { updateDataServer, addDataServer } from '../../ServerRequests/request';\r\nimport { Main, InfoBlock, NavElement, MainElement, Row, Label, Input, Select, TextArea, Button } from './styled';\r\n\r\nexport class EditAdd extends React.Component {\r\n    state = {\r\n        value: {\r\n            id: this.props.location.state.data.id,\r\n            name: this.props.location.state.data.name,\r\n            date: this.props.location.state.data.date,\r\n            price: this.props.location.state.data.price,\r\n            country: this.props.location.state.data.country,\r\n            composition: this.props.location.state.data.composition,\r\n            information: this.props.location.state.data.information,\r\n            denomination: this.props.location.state.data.denomination,\r\n            quality: this.props.location.state.data.quality,\r\n            weight: this.props.location.state.data.weight,\r\n            imgFrontUrl: this.props.location.state.data.imgFrontUrl,\r\n            imgBackUrl: this.props.location.state.data.imgBackUrl,\r\n            type: this.props.location.state.data.type\r\n        },\r\n        action: this.props.location.state.action,\r\n        saveStatus: undefined\r\n    }\r\n    addValue = (evt) => {\r\n        this.setState({\r\n            value: { ...this.state.value, [evt.target.name]: evt.target.value }\r\n        });\r\n    }\r\n    manipulateCoin = () => {\r\n        const { value, action } = this.state;\r\n        const { user } = this.props;\r\n        const status = (value.name !== '' && value.date !== '' && value.price !== '' && value.country !== '' && value.composition !== '' && value.information !== '' && value.denomination !== '' && value.quality !== '' && value.weight !== '' && value.imgBackUrl !== '' && value.imgFrontUrl !== '')\r\n        if (status) {\r\n            if (action === 'edit') {\r\n                updateDataServer(value, user)\r\n                    .then((res) => {\r\n                        this.setState({ saveStatus: res });\r\n                    })\r\n            } else if (action === 'add') {\r\n                addDataServer(value, user)\r\n                    .then((res) => {\r\n                        this.setState({ saveStatus: res });\r\n                    })\r\n            }\r\n        } else {\r\n            alert('Заполните все поля')\r\n        }\r\n    }\r\n    render() {\r\n        const { value, saveStatus, action } = this.state;\r\n        const { user } = this.props;\r\n        return (\r\n            <Main>\r\n                {saveStatus ? <InfoBlock>\r\n                    <p>{+saveStatus === 4 ? 'Accept' : 'Error'}</p>\r\n                    {+saveStatus === 4 ? <NavElement to={user.rol === 'admin' ? '/account/admin' : '/'}>Back</NavElement> : <Button onClick={() => this.setState({ saveStatus: 0 })}>Ok</Button>}\r\n                </InfoBlock> : null}\r\n                <MainElement>\r\n                    <Row>\r\n                        <Label htmlFor=\"\">Coin name</Label>\r\n                        <Input name='name' value={value.name} onChange={this.addValue} type=\"text\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <Label htmlFor=\"\">Face Value</Label>\r\n                        <Input name='denomination' value={value.denomination} onChange={this.addValue} type=\"text\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <Label htmlFor=\"\">Year of Issue</Label>\r\n                        <Input name='date' value={value.date} onChange={this.addValue} type=\"number\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <Label htmlFor=\"\">Price $</Label>\r\n                        <Input name='price' value={value.price} onChange={this.addValue} type=\"number\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <Label htmlFor=\"\">Country</Label>\r\n                        <Input name='country' value={value.country} onChange={this.addValue} type=\"text\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <Label htmlFor=\"\">Metal</Label>\r\n                        <Input name='composition' value={value.composition} onChange={this.addValue} type=\"text\" />\r\n                    </Row>\r\n                </MainElement>\r\n                <MainElement>\r\n                    <Row>\r\n                        <Label htmlFor=\"\">Description</Label>\r\n                        <TextArea name=\"information\" value={value.information} onChange={this.addValue} id=\"\" cols=\"30\" rows=\"10\"></TextArea>\r\n                    </Row>\r\n                    <Row>\r\n                        <Label htmlFor=\"\">Quality of the coin</Label>\r\n                        <Input name='quality' value={value.quality} onChange={this.addValue} type=\"text\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <Label htmlFor=\"\">Weigth</Label>\r\n                        <Input name='weight' value={value.weight} onChange={this.addValue} type=\"text\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <Label htmlFor=\"\">Type</Label>\r\n                        <Select name=\"type\" value={value.type} onChange={this.addValue}>\r\n                            <option value='Memorable'>Memorable</option>\r\n                            <option value='Investment'>Investment</option>\r\n                            <option value='Exclusive'>Exclusive</option>\r\n                        </Select>\r\n                    </Row>\r\n                </MainElement>\r\n                <MainElement>\r\n                    <Row>\r\n                        <Label htmlFor=\"\">Front</Label>\r\n                        <Input name='imgBackUrl' value={value.imgBackUrl} onChange={this.addValue} type=\"text\" />\r\n                        <Label htmlFor=\"\">Back</Label>\r\n                        <Input name='imgFrontUrl' value={value.imgFrontUrl} onChange={this.addValue} type=\"text\" />\r\n                    </Row>\r\n                    <Row>\r\n                        <Button onClick={this.manipulateCoin}>Save</Button>\r\n                        {action === 'edit' ? <NavElement to='/account/admin'>Cancel</NavElement> : <NavElement to='/'>Cancel</NavElement>}\r\n                    </Row>\r\n                </MainElement>\r\n            </Main>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditAdd);","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Main = styled.div`\r\n    position:relative;\r\n    margin:10px 0;\r\n`\r\nconst FindBlock = styled.div`\r\n    display:flex;\r\n`\r\nconst SearchInput = styled.input`\r\n    min-width:250px;\r\n    width: 374px;\r\n    height: 48px;\r\n    font-size:30px;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n`\r\n\r\nconst NavElement = styled(NavLink)`\r\n    width: 120px;\r\n    height: 48px;\r\n    background: #833AE0;\r\n    font:normal normal 14px/16px Roboto;\r\n    text-align: center;\r\n    color: #FFFFFF;\r\n    border:none;\r\n    margin-left:30px;\r\n    text-decoration:none;\r\n    display:flex;\r\n    justify-content:center;\r\n`\r\nconst FindButton = styled.button`\r\n    width:100%;\r\n    background: #833AE0;\r\n    outline-style: none ;\r\n    font:normal normal 14px/16px Roboto;\r\n    text-align: center;\r\n    cursor:pointer;\r\n    color: #FFFFFF;\r\n    border:none;\r\n`\r\nconst FilterButton = styled.button`\r\n    width: 200px;\r\n    height: 15px;\r\n    font:normal 300 14px/109% Roboto;\r\n    text-decoration-line: underline;\r\n    text-align:left;\r\n    margin:8px 0;\r\n    color: #000000;\r\n    border:none;\r\n    background:none;\r\n\r\n`\r\nconst FilterBlock = styled.div`\r\n    display:flex;\r\n    position:absolute;\r\n    background:#A9A9A9;\r\n    padding:10px;\r\n`\r\nconst Row = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n`\r\nconst Select = styled.select`\r\n    width: 250px;\r\n    height: 30px;\r\n    margin:5px 40px 5px 0;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n`\r\nconst TypeInput = styled.input`\r\n    width: 150px;\r\n    height: 30px;\r\n    margin:5px 7px ;\r\n    border: 1px solid #000000;\r\n    box-sizing: border-box;\r\n`\r\nexport { Main, FindBlock, SearchInput, NavElement, FindButton, FilterButton, FilterBlock, Row, Select, TypeInput };","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Main, FindBlock, SearchInput, NavElement, FindButton, FilterButton, FilterBlock, Row, Select, TypeInput } from './styled';\r\nimport { findDataServer, takeColumnNameDataServer } from '../ServerRequests/request'\r\n\r\nexport class Search extends React.Component {\r\n    state = {\r\n        countryColumn: [],\r\n        compositionColumn: [],\r\n        qualityColumn: [],\r\n        value: {\r\n            nameInformation: '',\r\n            country: '',\r\n            composition: '',\r\n            quality: '',\r\n            yearIssueFrom: '',\r\n            yearIssueTo: '',\r\n            priceFrom: '',\r\n            priceTo: ''\r\n        },\r\n        FilterBlockStatus: false\r\n    }\r\n\r\n    addValue = (evt) => {\r\n        this.setState({\r\n            value: { ...this.state.value, [evt.target.name]: evt.target.value }\r\n        })\r\n    }\r\n    find = () => {\r\n        const { value } = this.state;\r\n        if (value) {\r\n            findDataServer(value)\r\n                .then(res => {\r\n                    const { menuLoaded } = this.props;\r\n                    menuLoaded(res)\r\n                })\r\n        }\r\n        this.setState({\r\n            FilterBlockStatus: true\r\n        }, () => this.advanceFilterChange())\r\n    }\r\n\r\n    advanceFilterChange = () => {\r\n        const { FilterBlockStatus } = this.state;\r\n        this.setState({\r\n            FilterBlockStatus: !FilterBlockStatus\r\n        }, () => this.creatSelectOption())\r\n    }\r\n    creatSelectOption = () => {\r\n        const { FilterBlockStatus } = this.state;\r\n        if (FilterBlockStatus) {\r\n            takeColumnNameDataServer('country')\r\n                .then(res => {\r\n                    this.setState({\r\n                        countryColumn: res\r\n                    })\r\n                });\r\n            takeColumnNameDataServer('composition')\r\n                .then(res => {\r\n                    this.setState({\r\n                        compositionColumn: res\r\n                    })\r\n                });\r\n            takeColumnNameDataServer('quality')\r\n                .then(res => {\r\n                    this.setState({\r\n                        qualityColumn: res\r\n                    })\r\n                })\r\n        } else {\r\n            const { nameInformation } = this.state.value;\r\n            this.setState({\r\n                value: {\r\n                    nameInformation: nameInformation,\r\n                    country: '',\r\n                    composition: '',\r\n                    quality: '',\r\n                    yearIssueFrom: '',\r\n                    yearIssueTo: '',\r\n                    priceFrom: '',\r\n                    priceTo: ''\r\n                }\r\n            })\r\n        }\r\n    }\r\n    render() {\r\n        const { value, FilterBlockStatus, countryColumn, compositionColumn, qualityColumn } = this.state;\r\n        const status = (value.nameInformation || value.country || value.composition || value.quality || value.yearIssueFrom || value.yearIssueTo || value.priceFrom || value.priceTo) ? true : false;\r\n        return (\r\n            <Main>\r\n                <Row>\r\n                    <FindBlock>\r\n                        <SearchInput name='nameInformation' type='search' value={(status) ? value.nameInformation : ''} onChange={this.addValue} placeholder=\"Search\" />\r\n                        <NavElement to={{ pathname: '/coins/find', key: 2, state: { type: undefined, loadingStatus: true } }} ><FindButton onClick={this.find}>Search</FindButton></NavElement>\r\n                    </FindBlock>\r\n                    <FilterButton onClick={this.advanceFilterChange}>Advanced filter <span>></span></FilterButton>\r\n                </Row >\r\n                {FilterBlockStatus ? <FilterBlock>\r\n                    <div>\r\n                        <Row>\r\n                            <label htmlFor=\"country\">Country</label>\r\n                            <Select name='country' id=\"country\" onChange={this.addValue} value={value.country}>\r\n                                <option>Push</option>\r\n                                {countryColumn.length >= 0 ? countryColumn.map(item => <option key={item.country}>{item.country}</option>) : null}\r\n                            </Select>\r\n                        </Row>\r\n                        <Row>\r\n                            <label htmlFor=\"metal\">Mountry</label>\r\n                            <Select name='composition' id=\"metal\" onChange={this.addValue} value={value.composition} >\r\n                                <option>Push</option>\r\n                                {compositionColumn.length >= 0 ? compositionColumn.map(item => <option key={item.composition}>{item.composition}</option>) : null}\r\n                            </Select>\r\n                        </Row>\r\n                        <Row>\r\n                            <label htmlFor=\"qualityCoin\">Quality of the coin</label>\r\n                            <Select name='quality' id=\"qualityCoin\" onChange={this.addValue} value={value.quality} >\r\n                                <option>Push</option>\r\n                                {qualityColumn.length >= 0 ? qualityColumn.map(item => <option key={item.quality}>{item.quality}</option>) : null}\r\n                            </Select>\r\n                        </Row>\r\n                    </div>\r\n                    <div>\r\n                        <Row>\r\n                            <label htmlFor=\"Price\">Price</label>\r\n                            <div>\r\n                                <span>from</span>\r\n                                <TypeInput name='priceFrom' value={value.priceFrom} onChange={this.addValue} id='Price' type=\"number\" />\r\n                                <span>to</span>\r\n                                <TypeInput name='priceTo' value={value.priceTo} onChange={this.addValue} id='Price' type=\"number\" />\r\n                            </div>\r\n                        </Row>\r\n                        <Row>\r\n                            <label htmlFor=\"YearIssue\">Year of issue</label>\r\n                            <div>\r\n                                <span>from</span>\r\n                                <TypeInput name='yearIssueFrom' value={value.yearIssueFrom} onChange={this.addValue} id='YearIssue' type=\"number\" />\r\n                                <span>to</span>\r\n                                <TypeInput name='yearIssueTo' value={value.yearIssueTo} onChange={this.addValue} type=\"number\" />\r\n                            </div>\r\n                        </Row>\r\n                    </div>\r\n                </FilterBlock> : null}\r\n            </Main >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        menuLoaded: (newCoins) => {\r\n            dispatch({\r\n                type: 'MENU_LOADED',\r\n                payload: newCoins\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Search);","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Main = styled.div`\r\n    width:100%;\r\n    display:flex;\r\n    justify-content:space-between;\r\n    flex-wrap:wrap;\r\n    & div{\r\n        display:flex;\r\n        flex-direction:column;\r\n    }\r\n    @media (max-width: 768px) {\r\n        flex-direction: column;\r\n        justify-content:center;\r\n        align-items:center;\r\n    }\r\n`\r\nconst Title = styled.h2`\r\n    font:normal 500 28px/100% Roboto;\r\n    display: flex;\r\n    margin-bottom:20px;\r\n    align-items: center;\r\n    color: #000000;\r\n`\r\nconst NavElement = styled(NavLink)`\r\n    margin-bottom:20px;\r\n    font:normal 300 14px/109% Roboto;\r\n    color: #000000;\r\n`\r\nconst Block = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    justify-content:space-around;\r\n`\r\nconst Img = styled.img`\r\n    width: 214px;\r\n    height: 214px;\r\n`\r\nexport { Main, Block, Title, NavElement, Img }","import React from 'react';\r\nimport Search from '../../Search/Search';\r\nimport { Main, Block, Title, NavElement, Img } from './styled';\r\n\r\nclass CoinsMain extends React.Component {\r\n    render() {\r\n        return (\r\n            <Block>\r\n                <Search />\r\n                <Main>\r\n                    <div>\r\n                        <Title>Bullion coins</Title>\r\n                        <NavElement to={{ pathname: '/coins/list', key: 1, state: { type: 'Investment', loadingStatus: true } }}>Show all ></NavElement>\r\n                        <Img alt='Bullion' src='https://i.postimg.cc/mkdPNp9f/South-Vietnamese-Dong-1.png' />\r\n                    </div>\r\n                    <div>\r\n                        <Title>Exclusive coins</Title>\r\n                        <NavElement to={{ pathname: '/coins/list', key: 1, state: { type: 'Exclusive', loadingStatus: true } }}>Show all ></NavElement>\r\n                        <Img alt='Exclusive' src='https://i.postimg.cc/QdzprCHG/ISK-2.png' />\r\n                    </div>\r\n                    <div>\r\n                        <Title>Commemorative coins</Title>\r\n                        <NavElement to={{ pathname: '/coins/list', key: 1, state: { type: 'Memorable', loadingStatus: true } }}>Show all ></NavElement>\r\n                        <Img alt='Commemorative' src='https://i.postimg.cc/J44JDZXC/Looney-1.png' />\r\n                    </div>\r\n                </Main>\r\n            </Block>\r\n        )\r\n    }\r\n}\r\nexport default CoinsMain;","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Main =styled.div`\r\n    display:flex;\r\n    justify-content:flex-start;\r\n    flex-wrap:wrap;\r\n    padding:25px 0;\r\n    @media (max-width: 900px) {\r\n        justify-content:center;\r\n      }\r\n`\r\nconst NavElement = styled(NavLink)`\r\n    min-width:300px;\r\n    width:32%;\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    justify-content:space-around;\r\n    text-decoration:none;\r\n`\r\nconst Img = styled.img`\r\n    width: 120px;\r\n    height: 120px;\r\n`\r\nconst InfoBlock = styled.div`\r\n`\r\nconst Title = styled.h2`\r\n    width: 300px;\r\n    height: 20px;\r\n    font:normal bold 16px/19px Roboto;\r\n    color: #833AE0;\r\n    @media (max-width: 768px) {\r\n        text-align:center;\r\n      }\r\n`\r\nconst Text = styled.p`\r\n    width: 300px;\r\n    height: 95px;\r\n    font:normal normal 12px/125.5% Roboto;\r\n    color: #000000;\r\n`\r\nexport {Main, NavElement, Img,InfoBlock, Text, Title }","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport { connect } from 'react-redux';\r\nimport { getDataServer } from '../../ServerRequests/request';\r\nimport Search from '../../Search/Search';\r\nimport { Main, NavElement, Img, InfoBlock, Text, Title } from './styled';\r\n\r\nexport class CoinsList extends React.Component {\r\n    state = {\r\n        loading: this.props.location.state.loadingStatus\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.location.state) {\r\n            const { type } = this.props.location.state;\r\n            if (type) {\r\n                getDataServer(type)\r\n                    .then(res => {\r\n                        const { menuLoaded } = this.props;\r\n                        menuLoaded(res)\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                    })\r\n            }\r\n            else {\r\n                setTimeout(() => this.setState({\r\n                    loading: false\r\n                }), 2000)\r\n            }\r\n        }\r\n    }\r\n    shortinfo = (value) => {\r\n        const text = value;\r\n        let newText = '';\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (i > 150) {\r\n                break\r\n            }\r\n            newText += text[i];\r\n        }\r\n        return newText;\r\n    }\r\n    render() {\r\n        const { loading } = this.state;\r\n        const { coins } = this.props;\r\n        const coinsBlock = coins.length >= 0 ? coins.map(item => {\r\n            const text = this.shortinfo(item.information)\r\n            return (\r\n                <NavElement to={{ pathname: `/coins/page/${item.id}`, state: { data: item } }} key={item.id}>\r\n                    <Img alt=\"coins\" src={item.imgFrontUrl} />\r\n                    <InfoBlock>\r\n                        <Title>{item.name}</Title>\r\n                        <Text>{text}...</Text>\r\n                    </InfoBlock>\r\n                </NavElement>\r\n            )\r\n        }) : null;\r\n        return (\r\n            <div>\r\n                <Search />\r\n                {loading ? <ReactLoading type='spin' color='#843AE0' height={'10%'} width={'10%'} />\r\n                    : <Main>{coinsBlock}</Main>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        coins: state.coins\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        menuLoaded: (newCoins) => {\r\n            dispatch({\r\n                type: 'MENU_LOADED',\r\n                payload: newCoins\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CoinsList);\r\n","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Main = styled.div`\r\n    display:flex;\r\n    justify-content:center;\r\n    flex-wrap:wrap;\r\n    margin-top:24px;\r\n`\r\nconst MainSimilar = styled.div`\r\n    display:flex;\r\n    justify-content:flex-start;\r\n    flex-wrap:wrap;\r\n    padding:25px 0;\r\n    @media (max-width: 900px) {\r\n        justify-content:center;\r\n      }\r\n`\r\n\r\nconst Img = styled.img`\r\n    display:block;\r\n    width: 300px;\r\n    height: 300px;\r\n    &:last-child{\r\n        margin-top:24px\r\n    }\r\n`\r\nconst ImgSimilar = styled.img`\r\n    width: 120px;\r\n    height: 120px;\r\n`\r\n\r\nconst NavElement = styled(NavLink)`\r\n    min-width:300px;\r\n    width:30%;\r\n    margin:20px;\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    justify-content:space-around;\r\n    text-decoration:none;\r\n`\r\n\r\nconst Text = styled.p`\r\n    min-width: 300px;\r\n    height: 95px;\r\n    font:normal normal 12px/125.5% Roboto;\r\n    color: #000000;\r\n`\r\n\r\nconst InfoBlock = styled.div`\r\n    position:relative;\r\n    background: rgba(196, 196, 196, 0.5);\r\n    padding:19px 43px 50px;\r\n    min-width: 452px;\r\n    max-width:600px;\r\n    min-height: 624px;\r\n    margin-left:30px;\r\n`\r\nconst TitleSimilar = styled.div`\r\n    font:normal bold 16px/19px Roboto;\r\n    color: #833AE0;\r\n    text-align:center;\r\n    margin:10px auto;\r\n`\r\n\r\nconst Title = styled.h1`\r\n    font:normal bold 28px/33px Roboto;\r\n    display: flex;\r\n    align-items: center;\r\n    color: #000000;\r\n`\r\nconst TitleSimilarHeader = styled.h2`\r\n    height: 20px;\r\n    font:normal bold 28px/19px Roboto;\r\n    color: #833AE0;\r\n    text-align:center;\r\n    margin:50px auto 0 auto;\r\n`\r\nconst Information = styled.p`\r\n    font:normal normal 16px/109% Roboto;\r\n    color: #000000;\r\n`\r\nconst Table = styled.table`\r\n    font:normal normal 14px/105.2% Roboto;\r\n    border-collapse: collapse;\r\n    align-items: left;\r\n    width:100%;\r\n    & tr td{\r\n        padding:6.29px 4.73px 6.86px 21.22px;\r\n    }  \r\n    & tr td:nth-child(odd){\r\n        border-right: 0.5px solid #B1ABAB;\r\n    }\r\n    & tr{\r\n        border-bottom: 0.5px solid #B1ABAB;\r\n    }\r\n    & tr:last-child{\r\n        border-bottom: none;\r\n    }\r\n    & tr:nth-child(odd){\r\n        background: rgba(255, 255, 255, 0.9);    \r\n    }\r\n`\r\nconst Row = styled.div`\r\n    margin:40px 0;\r\n    display:flex;\r\n    justify-content:space-around;\r\n`\r\nconst Back = styled(NavLink)`\r\n    font-family:normal normal 10px/12px Roboto;\r\n    padding:0 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    text-decoration-line: underline;\r\n    background: #833AE0; \r\n    color: #FFFFFF;\r\n    text-decoration:none;\r\n\r\n`\r\nconst Button = styled.button`\r\n    width: 120px;\r\n    height: 48px;\r\n    background: #833AE0; \r\n    color: #FFFFFF;\r\n    border:none;\r\n    cursor:pointer;\r\n   \r\n`\r\nexport { Main, NavElement, TitleSimilar, TitleSimilarHeader, MainSimilar, Text, Img, ImgSimilar, InfoBlock, Title, Information, Table, Row, Back, Button };","import React from 'react';\r\nimport { message } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { Main, NavElement, Text, ImgSimilar, MainSimilar, Img, InfoBlock, Title, TitleSimilarHeader, TitleSimilar, Information, Table, Row, Back, Button } from './styled';\r\nimport { connect } from 'react-redux';\r\nimport { findDataServer, getCoinDataServer } from '../../ServerRequests/request';\r\n\r\nexport class CoinsPage extends React.Component {\r\n    state = {\r\n        similar: [],\r\n        data: undefined\r\n    }\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        getCoinDataServer(id)\r\n            .then(res => {\r\n                const data = res[0]\r\n                this.setState({ data: data });\r\n                const { historyAdd } = this.props;\r\n                historyAdd(data)\r\n                const value = {\r\n                    composition: data.composition,\r\n                    priceFrom: data.price - 50,\r\n                    priceTo: data.price + 50,\r\n                }\r\n                findDataServer(value)\r\n                    .then(res => {\r\n                        this.setState({\r\n                            similar: res\r\n                        })\r\n                    })\r\n            })\r\n    }\r\n    creatParagraph = () => {\r\n        const { data } = this.state;\r\n        let text = '';\r\n        const allText = [];\r\n        for (let i = 0; i < data.information.length; i++) {\r\n            if (data.information[i] === '\\n') {\r\n                allText.push(text)\r\n                text = ''\r\n            }\r\n            text += data.information[i]\r\n        }\r\n        return allText;\r\n    }\r\n    openNewPage = (data) => {\r\n        getCoinDataServer(data)\r\n            .then(res => {\r\n                const data = res[0]\r\n                this.setState({ data: data });\r\n                const { historyAdd } = this.props;\r\n                historyAdd(data)\r\n                const value = {\r\n                    composition: data.composition,\r\n                    priceFrom: data.price - 50,\r\n                    priceTo: data.price + 50,\r\n                }\r\n                findDataServer(value)\r\n                    .then(res => {\r\n                        this.setState({\r\n                            similar: res\r\n                        })\r\n                    })\r\n                this.backToTop()\r\n            })\r\n    }\r\n    backToTop() {\r\n        if (window.pageYOffset > 0) {\r\n            window.scrollBy(0, -80);\r\n            this.backToTop();\r\n        }\r\n    }\r\n    shortinfo = (value) => {\r\n        const text = value;\r\n        let newText = '';\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (i > 150) {\r\n                break\r\n            }\r\n            newText += text[i];\r\n        }\r\n        return newText;\r\n    }\r\n    addToStock = (data) => {\r\n        const { stockAdd } = this.props;\r\n        stockAdd(data)\r\n        message.success('Add to stock', 3);\r\n    }\r\n    render() {\r\n        const { similar, data } = this.state;\r\n        let id = 0;\r\n        let similarCoins = []\r\n        if (similar) {\r\n            similarCoins = similar.map(item => {\r\n                const text = this.shortinfo(item.information)\r\n                if (item.id !== data.id) {\r\n                    return (\r\n                        <NavElement onClick={() => this.openNewPage(item.id)} to={{ pathname: `/coins/page/${item.id}` }} key={item.id}>\r\n                            <ImgSimilar alt=\"coins\" src={item.imgFrontUrl} />\r\n                            <div>\r\n                                <TitleSimilar>{item.name}</TitleSimilar>\r\n                                <Text>{text}...</Text>\r\n                            </div>\r\n                        </NavElement>\r\n                    )\r\n                } else {\r\n                    return [];\r\n                }\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                {data ? <div>\r\n                    <Main>\r\n                        <div>\r\n                            <Img src={data.imgFrontUrl} alt={data.name} />\r\n                            <Img src={data.imgBackUrl} alt={data.name} />\r\n                        </div>\r\n                        <InfoBlock>\r\n                            <Title>{data.name}</Title>\r\n                            {this.creatParagraph(data.information).map(res => <Information key={id++}>{res}</Information>)}\r\n                            <Table>\r\n                                <tbody>\r\n                                    <tr><td>Issuing Country</td><td>{data.country}</td></tr>\r\n                                    <tr><td>Composition</td><td>{data.composition}</td></tr>\r\n                                    <tr><td>Quality</td><td>{data.quality}</td></tr>\r\n                                    <tr><td>Denomination</td><td>{data.denomination}</td></tr>\r\n                                    <tr><td>Year</td><td>{data.date}</td></tr>\r\n                                    <tr><td>Weight</td><td>{data.weight}</td></tr>\r\n                                    <tr><td>Price</td><td>{data.price}$</td></tr>\r\n                                </tbody>\r\n                            </Table>\r\n                            <Row>\r\n                                <Back to={{ pathname: '/coins/list', state: { type: data.type } }}>Back to the list</Back>\r\n                                <Button onClick={() => this.addToStock(data)}>Add</Button>\r\n                            </Row>\r\n                        </InfoBlock>\r\n                    </Main >\r\n                    <TitleSimilarHeader>Similar</TitleSimilarHeader>\r\n                    <MainSimilar>{similarCoins}</MainSimilar>\r\n                </div> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        historyAdd: (newCoins) => {\r\n            dispatch({\r\n                type: 'HISTORY_LOADED',\r\n                payload: newCoins\r\n            })\r\n        },\r\n        stockAdd: (newStock) => {\r\n            dispatch({\r\n                type: 'ADD_STOCK',\r\n                payload: newStock\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(CoinsPage);","import styled from 'styled-components';\r\n\r\nconst Main = styled.div`\r\n    display:flex;\r\n    justify-content:flex-start;\r\n    flex-wrap:wrap;\r\n    padding:25px 0;\r\n    @media (max-width: 900px) {\r\n        justify-content:center;\r\n      }\r\n`\r\nconst NavElement = styled.div`\r\n    min-width:300px;\r\n    width:50%;\r\n    display:flex;\r\n    flex-wrap:wrap;\r\n    justify-content:space-around;\r\n    align-items:center;\r\n    text-decoration:none;\r\n`\r\nconst TotalPrice = styled.h1`\r\n      color: #833AE0;\r\n      padding:10px 0;\r\n`\r\nconst Img = styled.img`\r\n    margin:0 10px;\r\n    width: 120px;\r\n    height: 120px;\r\n`\r\nconst InfoBlock = styled.div`\r\n    display:flex;\r\n    flex-direction:column;\r\n    flex-wrap:wrap;\r\n    justify-content:center;\r\n    align-items:center;\r\n`\r\nconst Title = styled.h2`\r\n    margin:2px 0;    \r\n    width: 300px;\r\n    height: 20px;\r\n    font:normal bold 16px/19px Roboto;\r\n    color: #833AE0;\r\n    @media (max-width: 768px) {\r\n        text-align:center;\r\n      }\r\n`\r\nconst Text = styled.p`\r\n    margin:2px 0; \r\n    width: 300px;\r\n    font:normal normal 12px  Roboto;\r\n    color: #000000;\r\n`\r\nconst Price = styled.p`\r\n    margin:2px 0;\r\n    width: 300px;\r\n    font:normal normal 24px Roboto;\r\n    color: #833AE0;\r\n`\r\nconst Button = styled.button`\r\n    width: 120px;\r\n    height: 48px;\r\n    background: #E5E5E5;\r\n    border:none;\r\n    cursor:pointer;\r\n    &:hover{\r\n        background: #833AE0; \r\n        color: #FFFFFF;\r\n    }\r\n`\r\nexport { Main, NavElement, Img, InfoBlock, Text, Price, Title, Button, TotalPrice }","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { notification } from 'antd';\r\nimport { Main, NavElement, Img, InfoBlock, Text, Price, Title, Button, TotalPrice } from './styled';\r\n\r\nexport class Stock extends React.Component {\r\n    shortinfo = (value) => {\r\n        const text = value;\r\n        let newText = '';\r\n        for (let i = 0; i < text.length; i++) {\r\n            if (i > 150) {\r\n                break\r\n            }\r\n            newText += text[i];\r\n        }\r\n        return newText;\r\n    }\r\n    buyStock = (value) => {\r\n        const { addStock } = this.props;\r\n        addStock(value);\r\n        const number = Math.floor(Math.random() * Math.floor(100));\r\n        notification.open({\r\n            message: 'The purchase was successful',\r\n            description:\r\n                `Contact the number + 994518747399, introduce yourself and tell me your order number ${number}`,\r\n            onClick: () => {\r\n                console.log('Notification Clicked!');\r\n            },\r\n        });\r\n    }\r\n    deleteStock = (value) => {\r\n        const { deleteStock } = this.props;\r\n        deleteStock(value);\r\n        notification.open({\r\n            message: 'Товар был удален',\r\n            description:\r\n                `Ваш товар был удаленн и списка`,\r\n            onClick: () => {\r\n                console.log('Notification Clicked!');\r\n            },\r\n        });\r\n    }\r\n    render() {\r\n        const { stock } = this.props;\r\n        let price = 0;\r\n        const CoinsBlock = stock.map(item => {\r\n            price += item.price;\r\n            const text = this.shortinfo(item.information)\r\n            return (\r\n                <NavElement key={item.id}>\r\n                    <Img alt=\"coins\" src={item.imgFrontUrl} />\r\n                    <InfoBlock>\r\n                        <Title>{item.name}</Title>\r\n                        <Text>{text}...</Text>\r\n                        <Price>Price: {item.price}$</Price>\r\n                    </InfoBlock>\r\n                    <Button onClick={() => this.buyStock(item.id)}>Buy</Button>\r\n                    <Button onClick={() => this.deleteStock(item.id)}>Cancel</Button>\r\n                </NavElement>\r\n            )\r\n        });\r\n        return (\r\n            <div>\r\n                <TotalPrice>Total price:{price}$</TotalPrice>\r\n                <Main>{CoinsBlock}</Main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        stock: state.stock\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addStock: (buyCoins) => {\r\n            dispatch({\r\n                type: 'BUY_STOCK',\r\n                payload: buyCoins\r\n            })\r\n        },\r\n        deleteStock: (deleteCoins) => {\r\n            dispatch({\r\n                type: 'DELETE_STOCK',\r\n                payload: deleteCoins\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stock);","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport './style.css';\r\nimport Header from './component/Header/Header';\r\nimport Login from './component/User/Login/Login';\r\nimport UserAccount from './component/User/accounts/UserAccount';\r\nimport AdminAccount from './component/User/accounts/AdminAccount';\r\nimport EditAdd from './component/User/EditAdd/EditAdd';\r\nimport CoinsMain from './component/Coins/CoinsMain/CoinsMain';\r\nimport CoinsList from './component/Coins/CoinsList/CoinsList';\r\nimport CoinsPage from './component/Coins/CoinsPage/CoinsPage';\r\nimport Stock from './component/Stock/Stock';\r\n\r\nexport class App extends React.Component {\r\n    componentDidMount() {\r\n        const user = {\r\n            login: window.localStorage.getItem('login'),\r\n            token: window.localStorage.getItem('access_token'),\r\n            rol: window.localStorage.getItem('rol')\r\n        }\r\n        const { userLoad, historyAdd } = this.props;\r\n        if (user.login) { userLoad(user) };\r\n        const watchStory = window.localStorage.getItem('watchStory')\r\n        if (watchStory) {\r\n            const story = JSON.parse(watchStory);\r\n            historyAdd(story);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path='/login' component={Login} />\r\n                    <Route exact path='/' component={CoinsMain} />\r\n                    <Route path='/stock' component={Stock} />\r\n                    <Route path='/account/user' component={UserAccount} />\r\n                    <Route path='/account/admin' component={AdminAccount} />\r\n                    <Route key={1} path='/coins/update' render={props => (<EditAdd {...props} />)} />\r\n                    <Route key={2} path='/coins/add' render={props => (<EditAdd {...props} />)} />\r\n                    <Route key={1} path='/coins/list' render={props => (<CoinsList {...props} />)} />\r\n                    <Route key={2} path='/coins/find' render={props => (<CoinsList {...props} />)} />\r\n                    <Route path='/coins/page/:id' component={CoinsPage} />\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userLoad: (User) => {\r\n            dispatch({\r\n                type: 'USER_LOGIN',\r\n                payload: User\r\n            })\r\n        },\r\n        historyAdd: (newCoins) => {\r\n            dispatch({\r\n                type: 'HISTORY_LOADED',\r\n                payload: newCoins\r\n            })\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reduser from '././component/Redux/reducer';\nimport App from './App';\n\nconst store = createStore(reduser);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}